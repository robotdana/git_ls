# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/hana/all/hana.rbi
#
# hana-1.3.6

module Hana
end
class Hana::Pointer
  def each(&block); end
  def eval(object); end
  def initialize(path); end
  def self.eval(list, object); end
  def self.parse(path); end
  include Enumerable
end
class Hana::Pointer::Exception < StandardError
end
class Hana::Pointer::FormatError < Hana::Pointer::Exception
end
class Hana::Patch
  def add(ins, doc); end
  def add_op(dest, key, obj); end
  def apply(doc); end
  def check_index(obj, key); end
  def copy(ins, doc); end
  def initialize(is); end
  def move(ins, doc); end
  def remove(ins, doc); end
  def replace(ins, doc); end
  def rm_op(obj, key); end
  def test(ins, doc); end
end
class Hana::Patch::Exception < StandardError
end
class Hana::Patch::FailedTestException < Hana::Patch::Exception
  def initialize(path, value); end
  def path; end
  def path=(arg0); end
  def value; end
  def value=(arg0); end
end
class Hana::Patch::OutOfBoundsException < Hana::Patch::Exception
end
class Hana::Patch::ObjectOperationOnArrayException < Hana::Patch::Exception
end
class Hana::Patch::IndexError < Hana::Patch::Exception
end
class Hana::Patch::MissingTargetException < Hana::Patch::Exception
end
class Hana::Patch::InvalidPath < Hana::Patch::Exception
end
